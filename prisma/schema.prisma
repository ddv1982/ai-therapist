// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  sessions Session[]
  credentials SecureCredential[]

  @@map("users")
}

model Session {
  id        String    @id @default(uuid())
  userId    String    @map("user_id")
  title     String
  startedAt DateTime  @default(now()) @map("started_at")
  endedAt   DateTime? @map("ended_at")
  status    String    @default("active")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  user     User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]
  reports  SessionReport[]

  @@index([userId])
  @@index([createdAt])
  @@index([status])
  @@map("sessions")
}

model Message {
  id        String   @id @default(uuid())
  sessionId String   @map("session_id")
  role      String   // 'user' or 'assistant'
  content   String
  timestamp DateTime @default(now())
  createdAt DateTime @default(now()) @map("created_at")

  session Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId])
  @@index([timestamp])
  @@index([role])
  @@map("messages")
}

model SessionReport {
  id                   String   @id @default(uuid())
  sessionId            String   @map("session_id")
  keyPoints            String   @map("key_points") // JSON string for SQLite compatibility
  therapeuticInsights  String   @map("therapeutic_insights") // JSON string
  patternsIdentified   String   @map("patterns_identified") // JSON string
  actionItems          String   @map("action_items") // JSON string
  moodAssessment       String?  @map("mood_assessment")
  progressNotes        String?  @map("progress_notes")
  createdAt            DateTime @default(now()) @map("created_at")

  session Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId])
  @@index([createdAt])
  @@map("session_reports")
}

model SecureCredential {
  id          String   @id @default(uuid())
  userId      String   @map("user_id")
  service     String   // 'gmail', 'smtp', etc.
  encryptedData String @map("encrypted_data") // Encrypted JSON containing credentials
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, service])
  @@index([userId])
  @@index([service])
  @@map("secure_credentials")
}