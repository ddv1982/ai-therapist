/**
 * Compatibility barrel generated by scripts/generate-api-types-modular.mjs
 * This file preserves the previous openapi-typescript import surface by combining
 * per-tag generated types into unified `paths` and `components` types.
 * Do not edit manually.
 */

import type * as Chat from './api/chat';
import type * as Sessions from './api/sessions';
import type * as Messages from './api/messages';
import type * as Reports from './api/reports';
import type * as Models from './api/models';
import type * as Environment from './api/environment';

export type paths = Chat.paths & Sessions.paths & Messages.paths & Reports.paths & Models.paths & Environment.paths;
export type webhooks = Record<string, never>;
export interface components {
  schemas: Chat.components['schemas'] & Sessions.components['schemas'] & Messages.components['schemas'] & Reports.components['schemas'] & Models.components['schemas'] & Environment.components['schemas'];
  responses: Chat.components['responses'] & Sessions.components['responses'] & Messages.components['responses'] & Reports.components['responses'] & Models.components['responses'] & Environment.components['responses'];
  parameters: never;
  requestBodies: never;
  headers: Chat.components['headers'] & Sessions.components['headers'] & Messages.components['headers'] & Reports.components['headers'] & Models.components['headers'] & Environment.components['headers'];
  pathItems: never;
}
export type operations = Record<string, never>;
